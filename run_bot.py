import logging
from aiogram.webhook.aiohttp_server import SimpleRequestHandler, setup_application
from aiohttp import web
from config import settings
from create_bot import bot, dp
from handlers.user_router import user_router
from handlers.admin_router import admin_router
from create_bot import set_commands
from aiogram.types import BotCommand, BotCommandScopeDefault
from create_bot import admins
# from work_time.time_func import send_time_msg



# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –º–µ–Ω—é –∫–æ–º–º–∞–Ω–¥
async def set_commands():
    # –°–æ–∑–¥–∞–µ–º —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥, –∫–æ—Ç–æ—Ä—ã–µ –±—É–¥—É—Ç –¥–æ—Å—Ç—É–ø–Ω—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º
    commands = [BotCommand(command='start', description='–°—Ç–∞—Ä—Ç')]
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —ç—Ç–∏ –∫–æ–º–∞–Ω–¥—ã –∫–∞–∫ –¥–µ—Ñ–æ–ª—Ç–Ω—ã–µ –¥–ª—è –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    await bot.set_my_commands(commands, BotCommandScopeDefault())


# –°—Ç–∞—Ä—Ç–æ–≤–∞—è —Ñ—É–Ω–∫—Ü–∏—è –±–æ—Ç–∞
async def on_startup():
    # –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ –∫–æ–º–º–∞–Ω–¥
    await set_commands() 
    # –£–∫–∞–∑—ã–≤–∞–µ—Ç url –∫ –≤–µ–± —Ö—É–∫–∞–º
    await bot.set_webhook(f'{settings.BASE_URL}{settings.WEBHOOK_PATH}') 
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∞–º, —á—Ç–æ –±–æ—Ç –∑–∞–ø—É—â–µ–Ω
    for admin in admins:
        await bot.send_message(chat_id=admin, text='–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω üß©')

async def on_shutdown():
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∞–º, —á—Ç–æ –±–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω
    for admin in admins:
        await bot.send_message(chat_id=admin, text='–ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω üòß')
    # –£–¥–∞–ª—è–µ–º –≤–µ–±—Ö—É–∫–∏ –∏ –æ—á–µ—â–∞–µ–º –æ–∂–∏–¥–∞—é—â–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
    await bot.delete_webhook(drop_pending_updates=True) 
    # –ó–∞–∫—Ä—ã–≤–∞–µ–º —Å–µ—Å—Å–∏—é –±–æ—Ç–∞
    await bot.session.close() 


# –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞
# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è, –∫–æ—Ç–æ—Ä–∞—è –∑–∞–ø—É—Å–∫–∞–µ—Ç –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
def main() -> None:
    # –ü–æ–¥–∫–ª—é—á–∞–µ–º –º–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ç–æ—Ä—ã (—Ä–æ—É—Ç–µ—Ä) –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π
    dp.include_router(user_router)
    dp.include_router(admin_router)

    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ—Ç –≤—ã–∑–≤–∞–Ω–∞ –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ –±–æ—Ç–∞
    dp.startup.register(on_startup)

    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ—Ç –≤—ã–∑–≤–∞–Ω–∞ –ø—Ä–∏ –æ—Å—Ç–∞–Ω–æ–≤–∫–µ –±–æ—Ç–∞
    dp.shutdown.register(on_shutdown)

    # –°–æ–∑–¥–∞–µ–º –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–∞ –±–∞–∑–µ aiohttp
    app = web.Application()

    # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–ø—Ä–æ—Å–æ–≤ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –≤–µ–±—Ö—É–∫–æ–º
    webhook_requests_handler = SimpleRequestHandler(
        dispatcher=dp,  # –ü–µ—Ä–µ–¥–∞–µ–º –¥–∏—Å–ø–µ—Ç—á–µ—Ä
        bot=bot  # –ü–µ—Ä–µ–¥–∞–µ–º –æ–±—ä–µ–∫—Ç –±–æ—Ç–∞
    )
    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–ø—Ä–æ—Å–æ–≤ –Ω–∞ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–º –ø—É—Ç–∏
    webhook_requests_handler.register(app, path=settings.WEBHOOK_PATH)

    # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∏ —Å–≤—è–∑—ã–≤–∞–µ–º –µ–≥–æ —Å –¥–∏—Å–ø–µ—Ç—á–µ—Ä–æ–º –∏ –±–æ—Ç–æ–º
    setup_application(app, dp, bot=bot)

    # –ó–∞–ø—É—Å–∫–∞–µ–º –≤–µ–±-—Å–µ—Ä–≤–µ—Ä –Ω–∞ —É–∫–∞–∑–∞–Ω–Ω–æ–º —Ö–æ—Å—Ç–µ –∏ –ø–æ—Ä—Ç–µ
    web.run_app(app, host=settings.HOST, port=settings.PORT)


if __name__ == "__main__":
    logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(name)s - %(levelname)s - %(message)s')
    logger = logging.getLogger(__name__)
    main()
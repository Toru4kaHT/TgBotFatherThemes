from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup
from aiogram.utils.keyboard import InlineKeyboardBuilder
from create_bot import admins


# —Å—Ç–∞—Ä—Ç–æ–≤–∞—è –∫–ª–∞–≤–∞
def start_inline_kb(telegram_id: int):
    kb_list = [
        [InlineKeyboardButton(text='‚úàÔ∏è –ù–∞—à —Ç–≥–∫', url='https://t.me/nefor_py'),
         InlineKeyboardButton(text='üìó –ü–æ–º–æ—â—å', callback_data='support')],
        [InlineKeyboardButton(text='üí£ –¢–µ–º–∫–∏', callback_data='themes')]
               ]
    if telegram_id in admins:
        kb_list[1].append(InlineKeyboardButton(text='üë§ –ê–¥–º–∏–Ω–∫–∞', callback_data='admin'))
    
    keyboard = InlineKeyboardMarkup(inline_keyboard=kb_list)

    return keyboard

# –∫–ª–∞–≤–∞ –≤—ã–æ–¥–∏—Ç—Å—è –∫–æ–≥–¥–∞ –Ω—É–∂–Ω–æ –≤—ã–≤–µ—Å—Ç–∏ —Å–ø–∏—Å–æ–∫ —Ç–µ–º–æ–∫
def themes_inline_kb():
    themes_list = {'1. –ê–ª—å—Ñ–∞ –±–∞–Ω–∫': 'alfa',
                   '2. –†–µ—Ñ–∫–∏': 'refki',
                   '3. –ü–æ–π—Ç–∏ –Ω–∞ —Ä–∞–±–æ—Ç—É': 'gotowork',
                   '4. –°–∫–∞–º –±–∞–±—É—à–µ–∫': 'scum',
                   '5. –∞–±—É–∑ –∫–∞—Ä—Ç': 'abuz',
                   '6. –ù–∞–≥–æ—Ä–Ω—ã–µ —á–µ–ª–Ω—ã': 'meow',
                   '7. –ê–ª—å—Ñ–∞ –±–∞–Ω–∫': 'alfa',
                   '8. –†–µ—Ñ–∫–∏': 'refki',
                   '9. –ü–æ–π—Ç–∏ –Ω–∞ —Ä–∞–±–æ—Ç—É': 'gotowork',
                   '10. –°–∫–∞–º –±–∞–±—É—à–µ–∫': 'scum',
                   }
    themes_button_list = [[InlineKeyboardButton(text=theme, callback_data=callback)] for theme, callback in themes_list.items()]
    kb_list = [
        [InlineKeyboardButton(text='‚¨ÖÔ∏è –ù–∞–∑–∞–¥', callback_data='backtomenu'), 
         InlineKeyboardButton(text='üìó –ü–æ–º–æ—â—å', callback_data='support')]
               ]
    kb_list = themes_button_list + kb_list
    
    keyboard = InlineKeyboardMarkup(inline_keyboard=kb_list)
    
    return keyboard

# –∫–ª–∞–≤–∞ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–∏–∫–µ—Ç–æ–≤
def tikcket_inline_kb():
    kb_list = [
        [InlineKeyboardButton(text='‚¨ÖÔ∏è –ù–∞–∑–∞–¥', callback_data='backtomenu'),
         InlineKeyboardButton(text='üé´ –°–æ–∑–¥–∞—Ç—å —Ç–∏–∫–µ—Ç', callback_data='ticket')]
               ]
    
    keyboard = InlineKeyboardMarkup(inline_keyboard=kb_list)

    return keyboard

def types_tikcket_inline_kb():
    kb_list = [
        [InlineKeyboardButton(text='ü§ñ –ë–æ—Ç', callback_data='sup_bot'), InlineKeyboardButton(text='üí∏ –¢–µ–º–∫–∞', callback_data='sup_theme')],
        [InlineKeyboardButton(text='üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å', callback_data='sup_user'), InlineKeyboardButton(text='üí¨ –û—Ç–∑—ã–≤', callback_data='sup_feedback')],
        [InlineKeyboardButton(text='‚¨ÖÔ∏è –ù–∞–∑–∞–¥', callback_data='support')]
    ]
    
    keyboard = InlineKeyboardMarkup(inline_keyboard=kb_list)

    return keyboard

def accept_or_cancle_kb():
    kb_list = [
        [InlineKeyboardButton(text='‚úÖ –î–∞', callback_data='accept'), InlineKeyboardButton(text='‚ùå –ù–µ—Ç', callback_data='cancle')]
    ]

    keyboard = InlineKeyboardMarkup(inline_keyboard=kb_list)

    return keyboard

def admin_panel_kb():
    kb_list = [
        [InlineKeyboardButton(text='üé´ –¢–∏–∫–µ—Ç—ã', callback_data='adm_tickets'), InlineKeyboardButton(text='üßë‚Äçüíª –õ–æ–≥–∏', callback_data='adm_logs')],
        [InlineKeyboardButton(text='‚¨ÖÔ∏è –ù–∞–∑–∞–¥', callback_data='backtomenu'), InlineKeyboardButton(text='üí£ –¢–µ–º–∫–∏', callback_data='adm_themes')]
    ]

    return InlineKeyboardMarkup(inline_keyboard=kb_list)

def pick_tickets_type_kb():
    kb_list = [
        [InlineKeyboardButton(text='ü§ñ –ë–æ—Ç', callback_data='type_bot'), InlineKeyboardButton(text='üí∏ –¢–µ–º–∫–∞', callback_data='type_theme')],
        [InlineKeyboardButton(text='üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å', callback_data='type_user'), InlineKeyboardButton(text='üí¨ –û—Ç–∑—ã–≤', callback_data='type_feedback')],
        [InlineKeyboardButton(text='‚¨ÖÔ∏è –ù–∞–∑–∞–¥', callback_data='admin')]
    ]

    return InlineKeyboardMarkup(inline_keyboard=kb_list)


# def generic_tickets_kb(type: list):


#     tickets = generic_type(type)
#     tickets[]

#     keyboard = InlineKeyboardBuilder()


#     return keyboard


        